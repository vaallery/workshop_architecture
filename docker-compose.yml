services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - db:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.17.3
    container_name: elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=admin
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: redpanda_dev
    command:
      - redpanda start
      - --smp 1
      - --memory 1G
      - --overprovisioned
      - --node-id 1
      - --check=false
      - --advertise-kafka-addr 127.0.0.1:9092
    ports: ["9092:9092"]
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    environment:
      - REDPANDA_ENVIRONMENT=development

  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda_console_dev
    ports: ["8080:8080"]
    environment:
      - KAFKA_BROKERS=127.0.0.1:9092
    depends_on:
      - redpanda


  web:
    tty: true
    stdin_open: true
    image: library
    container_name: library
    build:
      context: .
    env_file:
      ".env"
    command: >
      sh -c "rm -f tmp/pids/server.pid &&
             bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/rails
      - "$DOCKER_COMPOSE_ARCHIVE_FOLDER:/rails/db/data"
    networks:
      - default
    ports:
      - "8080:3000"
    depends_on:
      - db
    environment:
      RAILS_LOG_TO_STDOUT: 'yes'
      PAGER: 'more'
      POSTGRES_HOST: 'db'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
volumes:
  db:
  redpanda_data:
  es-data:  # Определение тома
    driver: local
